---

- name: Install git
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: [git, python3-pip, python3.10-venv, gcc, default-libmysqlclient-dev, pkg-config, python3-mysqldb]

- name: Create folder for Flask app
  file:
    path: "/opt/{{ flask_dir }}"
    state: directory

- name: Git clone
  shell: git clone https://github.com/t-chyngyz/DevOps-Project-5.git . || git pull
  args:
    chdir: /opt/{{ flask_dir }}/

- name: Install Flask by shell
  shell: python3 -m venv venv && . venv/bin/activate && pip3 install mysqlclient gunicorn 
  args:
    chdir: /opt/{{ flask_dir }}/

- name: Install modules from requirements.txt
  shell: python3 -m venv venv && . venv/bin/activate && pip3 install --no-cache-dir -r requirements.txt 
  args:
    chdir: /opt/{{ flask_dir }}/

- name: Create myapp database
  mysql_db:
    name: "{{ db_name }}"
    login_user: '{{ mysql_user }}'
    login_password: '{{ mysql_password }}'
    login_host: "{{ mysql_endpoint }}"
    state: present

- name: Insert query to test_db with named_args
  community.mysql.mysql_query:
    login_db: "{{ db_name }}"
    login_user: '{{ mysql_user }}'
    login_password: '{{ mysql_password }}'
    login_host: "{{ mysql_endpoint }}"
    query: "{{ mysql_query }}"

- name: Copy templates and wsgi.py to flask dir
  copy:
    src: "{{ item }}"
    dest: /opt/{{ flask_dir }}/ 
    mode: preserve
  loop: [templates, wsgi.py]

- name: Render app.py to flask dir
  template:
    src: app.py
    dest: /opt/{{ flask_dir }}/

- name: Render systemd service file and socket for gunicorn
  template:
    src: "{{ item }}"
    dest: /etc/systemd/system/{{ item }}
  loop: [gunicorn.service, gunicorn.socket]
